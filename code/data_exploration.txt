# Column Names:
joined_table.columns

Index (['NFER_PID', 'DIAGNOSIS_METHOD_CODE', 'COUNT_NFER_PID',
'COUNT_DIAGNOSIS_METHOD_CODE', 'INACTIVE_DTM', 'AUTO_RESOLVE_DTM', 'ONSET DTM', 'NFER DTM', 'DIAGNOSIS DTM', 'DIAGNOSIS_CODE', 'DIAGNOSIS_DESCRIPTION'],
dtype='object')

# Number of null values under each variable:
joined_table.isnull().sum (axis = 0)
  
# Descending order
joined_table_null_counts = joined_table.isnull().sum().sort_values (ascending=False)
print (joined_table_null_counts)
  
AUTO_RESOLVE_DTM 99237312
INACTIVE_DTM 99188496
ONSET_DTM 93003046
DIAGNOSIS_DTM 114069
NFER_DTM 114056
DIAGNOSIS METHOD_CODE 40984
DIAGNOSIS_CODE 35031
DIAGNOSIS_DESCRIPTION 19
NFER_PID 0

# Number of unique patients:
unique_nfer_pid = joined_table['NFER_PID'].nunique()
print("The number of unique patients in the DataFrame is: ", unique_nfer_pid)

The number of unique patients in the DataFrame is: 2257242

# All Possible Values in DIAGNOSIS_METHOD_CODE column:
joined_dmc_unique_values = joined_table['DIAGNOSIS_METHOD_CODE'].unique()
print(joined_dmc_unique_values)

# Group by UNIQUE patient: Number of patients in each diagnosis method code:

# Group the DataFrame by DIAGNOSIS_METHOD_CODE and calculate the number of unique NFER_PID values
count_by_code = joined_table.groupby('DIAGNOSIS_METHOD_CODE')['NFER_PID'].nunique()

# Sort the count by code in descending order
count_by_code = count_by_code.sort_values (ascending=False)
print (count_by_code)

DIAGNOSIS_METHOD_CODE
ICD-10-CM 1960856
ICD9 814941
ICD-9-CM 744369
ICD10 684147
HIC 339842
SNOMED CT 230448
UNKNOWN 38271









